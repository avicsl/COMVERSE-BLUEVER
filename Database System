CREATE DATABASE comverse;
 
USE comverse;

-- STUDENT TABLE --------------------------------------------------------------------------------------------------------------
CREATE TABLE users (
    student_number VARCHAR(7) PRIMARY KEY,
    email VARCHAR(100) UNIQUE NOT NULL CHECK (email LIKE '%@gmail.com'),
    password VARCHAR(255) NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50) NOT NULL,
    course VARCHAR(50) NOT NULL
);

DELIMITER $$
CREATE TRIGGER before_insert_users
BEFORE INSERT ON users
FOR EACH ROW
BEGIN
    DECLARE next_student_number INT;
    SELECT IFNULL(MAX(CAST(SUBSTRING(student_number, 5, 3) AS UNSIGNED)), 0) + 1 
    INTO next_student_number FROM users;
    SET NEW.student_number = CONCAT('CV-', LPAD(next_student_number, 3, '0'));
END$$
DELIMITER ;

-- CATEGORY TABLE --------------------------------------------------------------------------------------------------------------
CREATE TABLE category (
    category_id VARCHAR(100) PRIMARY KEY,
    category_name VARCHAR(20) UNIQUE NOT NULL 
);

INSERT INTO category (category_id, category_name) VALUES
('C001 - SHIRT', 'SHIRT'),
('C002 - CAP', 'CAP'),
('C003 - BAG', 'BAG'),
('C004 - JACKET', 'JACKET'),
('C005 - LACE', 'LACE');

SELECT * FROM category ORDER BY category_id ASC;

-- PRODUCT TABLE --------------------------------------------------------------------------------------------------------------
CREATE TABLE product (
    product_id VARCHAR(10) PRIMARY KEY,
    category_id VARCHAR(100),
    product_name VARCHAR(50),
    image_url VARCHAR(255),
    amount DECIMAL(10,2),
    quantity int,
    FOREIGN KEY (category_id) REFERENCES category(category_id)
);
 
DELIMITER $$
CREATE TRIGGER before_insert_product
BEFORE INSERT ON product
FOR EACH ROW
BEGIN
    DECLARE next_product_id INT;
    SELECT IFNULL(MAX(CAST(SUBSTRING(product_id, 5, 3) AS UNSIGNED)), 0) + 1 
    INTO next_product_id FROM product;
    SET NEW.product_id = CONCAT('COM-', LPAD(next_product_id, 3, '0'));
END$$
DELIMITER ;

-- CART TABLE --------------------------------------------------------------------------------------------------------------
CREATE TABLE cart (
    cart_id VARCHAR(100) PRIMARY KEY,
    product_id VARCHAR(20) NOT NULL,
    student_number VARCHAR(7) NOT NULL,   
    image_url VARCHAR(255) NOT NULL,
    quantity INT NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (student_number) REFERENCES users(student_number)
);


DELIMITER $$
CREATE TRIGGER before_insert_cart
BEFORE INSERT ON cart
FOR EACH ROW
BEGIN
    DECLARE next_cart_id INT;
    SELECT IFNULL(MAX(CAST(SUBSTRING(cart_id, 6) AS UNSIGNED)), 0) + 1
    INTO next_cart_id FROM cart;
    SET NEW.cart_id = CONCAT('CART-', LPAD(next_cart_id, 3, '0'));
END$$
DELIMITER ;

drop table orders
SELECT * FROM orders
 
 -- ORDER TABLE --------------------------------------------------------------------------------------------------------------
CREATE TABLE orders (
    order_id VARCHAR(100) PRIMARY KEY,
    transaction_id VARCHAR(100) NOT NULL, 
    product_id VARCHAR(250) NOT NULL,
    student_number VARCHAR(7) NOT NULL,
    image_url VARCHAR(255) NOT NULL,
    order_date DATE NOT NULL,
    quantity VARCHAR(150) NOT NULL,
    total_amount DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (student_number) REFERENCES users(student_number)
);

DELIMITER $$
CREATE TRIGGER before_insert_orders
BEFORE INSERT ON orders
FOR EACH ROW
BEGIN
    DECLARE next_order_id INT;
    SELECT IFNULL(MAX(CAST(SUBSTRING(order_id, 5) AS UNSIGNED)), 0) + 1
    INTO next_order_id FROM orders;
    SET NEW.order_id = CONCAT('ORD-', LPAD(next_order_id, 3, '0'));
    IF NEW.order_date IS NULL THEN
        SET NEW.order_date = CURDATE();
    END IF;
END$$
DELIMITER ;

-- SHIPPING TABLE --------------------------------------------------------------------------------------------------------------
CREATE TABLE shipping (
    shipping_id VARCHAR(100) PRIMARY KEY,
    order_id VARCHAR(100) NOT NULL,
    shipping_address VARCHAR(255) NOT NULL,
    shipping_date DATE NOT NULL,
    shipping_amount DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

DELIMITER $$
CREATE TRIGGER before_insert_shipping
BEFORE INSERT ON shipping
FOR EACH ROW
BEGIN
    DECLARE next_shipping_id INT;
    SELECT IFNULL(MAX(CAST(SUBSTRING(shipping_id, 6) AS UNSIGNED)), 0) + 1
    INTO next_shipping_id FROM shipping;
    SET NEW.shipping_id = CONCAT('SHIP-', LPAD(next_shipping_id, 3, '0'));
    IF NEW.shipping_date IS NULL THEN
        SET NEW.shipping_date = CURDATE();
    END IF;
    SET NEW.shipping_amount = 40;
END$$
DELIMITER ;

-- PAYMENT TABLE --------------------------------------------------------------------------------------------------------------
CREATE TABLE payment (
    payment_id VARCHAR(100) PRIMARY KEY,
    order_id VARCHAR(100) NOT NULL,
    payment_amount DECIMAL(10,2) NOT NULL,
    payment_method VARCHAR(50) NOT NULL,
    payment_date DATE NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

DELIMITER $$
CREATE TRIGGER before_insert_payment
BEFORE INSERT ON payment
FOR EACH ROW
BEGIN
    DECLARE next_payment_id INT;
    SELECT IFNULL(MAX(CAST(SUBSTRING(payment_id, 6) AS UNSIGNED)), 0) + 1
    INTO next_payment_id FROM payment;
    SET NEW.payment_id = CONCAT('PAY-', LPAD(next_payment_id, 3, '0'));
    IF NEW.payment_date IS NULL THEN
        SET NEW.payment_date = CURDATE();
    END IF;
END$$
DELIMITER ;
